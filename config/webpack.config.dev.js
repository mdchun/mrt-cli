const HtmlWebpackPlugin = require("html-webpack-plugin");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const Webpack = require("webpack");
const { cwdPath } = require("../lib/util");

module.exports = {
  mode: "development",
  entry: cwdPath("./src/index.js"),
  output: {
    path: cwdPath("./dist"),
    filename: "bundle.js"
  },

  devtool: "inline-source-map",

  module: {
    rules: [
      {
        test: /\.jsx?$/,
        loader: "babel-loader",
        exclude: /node_modules/
      },
      {
        test: /\.tsx?$/,
        loader: "babel-loader!ts-loader",
        exclude: /node_modules/
      },

      {
        test: /\.less$/,
        exclude: [/node_modules/],
        loaders: [
          "style-loader",
          {
            loader: require.resolve("ts-css-modules-webpack-loader"),
            options: {
              banner:
                "//This file is automatically generated, please do not change this file!",
              dest: "./definitions",
              root: "./components"
            }
          },
          {
            loader: "css-loader",
            options: {
              importLoaders: 2,
              modules: {
                mode: "local",
                localIdentName: "[path][name]__[local]--[hash:base64:5]"
              }
            }
          },
          {
            loader: "postcss-loader",
            options: {
              ident: "postcss",
              plugins: [require("autoprefixer"), require("postcss-plugin")]
            }
          },
          {
            loader: "less-loader",
            options: {
              importLoaders: 2,
              modules: true
            }
          }
        ]
      },
      {
        test: /\.less$/, // 配置除src外的less文件不打开cssModule
        exclude: [/src/],
        use: [
          { loader: "style-loader" },
          {
            loader: "css-loader",
            options: {
              importLoaders: 2
            }
          },
          {
            loader: "postcss-loader",
            options: {
              ident: "postcss",
              plugins: [require("autoprefixer"), require("postcss-plugin")]
            }
          },
          {
            loader: "less-loader",
            options: {
              modules: true,
              // modifyVars: { '@primary-color': '#1DA57A' },
              javascriptEnabled: true
            }
          }
        ]
      },
      // {
      // 	test: /\.css$/,
      // 	// exclude: /node_modules/,
      // 	loaders: [
      // 		'style-loader',
      // 		{
      // 			loader: 'css-loader',
      // 			options: {
      // 				modules: true
      // 			}
      // 		}
      // 	]
      // },
      {
        //CSS处理
        test: /\.css$/,
        loader: "style-loader!css-loader?modules",
        exclude: /node_modules/
      },

      {
        //antd样式处理
        test: /\.css$/,
        exclude: /src/,
        use: [
          { loader: "style-loader" },
          {
            loader: "css-loader",
            options: {
              importLoaders: 1
            }
          }
        ]
      }
    ]
  },

  // 摇树
  // optimization: {
  // 	useExports: true
  // },

  resolve: {
    extensions: [".tsx", ".js", ".jsx", ".css", ".less"],
    modules: ["node_modules"]
  },

  devServer: {
    contentBase: cwdPath("./dist"),
    port: 7777,
    hot: true,
    hotOnly: true,
    historyApiFallback: true
  },

  plugins: [
    new CleanWebpackPlugin(),

    new HtmlWebpackPlugin({
      title: "Development",
      template: cwdPath("./public/index.html")
    }),

    new Webpack.HotModuleReplacementPlugin()
  ]
};
